@page "/fetchdata"
@using AfiliacionesCirsa.ViewModels
@inject IFetchDataViewModel vm;
@inherits AuthorizationComponent
<link rel="stylesheet" href="navbar.css" />

<PageTitle>Weather forecast</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="titlediv">
                <h4 class="title is-4">Tus usuarios afiliados</h4>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="titlediv">
            <!-- Contenido principal-->
            @if (vm.isBusy)
            {
                <p>PENSANDO</p>
                <div class="spinner-border" role="status">
                </div>
            }
            @if (vm.clientesAfiliados == null)
            {
                <p><em>Loading...</em></p>
            }
            else if (vm.clientesAfiliados.Count == 0)
            {
                <p><em>No tienes Clientes afiliados aun</em></p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>NombreCompleto</th>
                            <th>EmailAddress</th>
                            <th>Fecha Afiliacion</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cliente in vm.clientesAfiliados)
                        {
                            <tr>
                                <td>@cliente.NombreCompleto</td>
                                <td>@cliente.EmailAddress</td>
                                <td>@cliente.TimeCreated</td>
                                <td>
                                        <button class="button yellowbutton" @onclick="() => vm.verDetalle(3)">Visualizar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            </div>
        </div>
    </div>
</div>

@code {


    protected override async Task OnInitializedAsync()
    {
        await vm.OnInitialize();
    }

    

}
